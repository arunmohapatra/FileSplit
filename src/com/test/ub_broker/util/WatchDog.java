
/*************************************************************/
/* Copyright (c) 1984-1996 by Progress Software Corporation  */
/*                                                           */
/* All rights reserved.  No part of this program or document */
/* may be  reproduced in  any form  or by  any means without */
/* permission  in  writing  from  Data Language Corporation. */
/*************************************************************/
/*
 * $Id: WatchDog.java,v 1.2 1998/03/26 17:37:38 lecuyer Exp $
 */

/*********************************************************************/
/* Module : WatchDog                                                 */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*********************************************************************/

package com.progress.ubroker.util;

/*********************************************************************/
/*                                                                   */
/* Class WatchDog                                                    */
/*                                                                   */
/*********************************************************************/

public class WatchDog
    extends Thread
{

/*********************************************************************/
/* Constants                                                         */
/*********************************************************************/

static final int DEF_PRIORITY           = Thread.NORM_PRIORITY + 1;
static final int DEF_INTERVAL           = 60000;  /* one minute */

/*********************************************************************/
/* Static Data                                                       */
/*********************************************************************/

/*********************************************************************/
/* Instance Data                                                     */
/*********************************************************************/

String threadname;
intfWatchable watcher;
long interval;
int priority;

/*********************************************************************/
/* Constructors                                                      */
/*********************************************************************/

/*********************************************************************/
/*                                                                   */
/*********************************************************************/

public WatchDog(  String threadname,
                  intfWatchable watcher,
		  long interval,
		  int priority)
    {
    this.threadname = new String(threadname);
    this.watcher = watcher;
    this.interval = interval;
    this.priority = priority;

    /* make this a daemon thread */
    setDaemon(true);
    }

/*********************************************************************/
/*                                                                   */
/*********************************************************************/

public WatchDog()
    {
    this("", null, DEF_INTERVAL, DEF_PRIORITY);
    }

/*********************************************************************/
/*                                                                   */
/*********************************************************************/

public WatchDog(String threadname, intfWatchable watcher, long interval)
    {
    this(threadname, watcher, interval, DEF_PRIORITY);
    }

/*********************************************************************/
/*                                                                   */
/*********************************************************************/

/*********************************************************************/
/* public methods                                                    */
/*********************************************************************/

/*********************************************************************/
/*                                                                   */
/*********************************************************************/

public void run()
    {
    Thread current = Thread.currentThread();

    current.setPriority(priority);
    while (interval > 0)
        {
	try
	    {
	    current.sleep(interval);
	    watcher.watchEvent();
	    }
	catch (Exception e)
	    {
            System.err.println( threadname +
			" : sleeping error " + e.getMessage() );
	    return;
	    }
	}
    }

/*********************************************************************/
/*                                                                   */
/*********************************************************************/

public String getThreadname()
    {
    return new String(threadname);
    }

/*********************************************************************/
/*                                                                   */
/*********************************************************************/

public synchronized long getInterval()
    {
    return interval;
    }

/*********************************************************************/
/*                                                                   */
/*********************************************************************/

public synchronized void setInterval(long interval)
    {
    this.interval = interval;
    }

/*********************************************************************/
/*                                                                   */
/*********************************************************************/

/*********************************************************************/
/* private methods                                                   */
/*********************************************************************/

/*********************************************************************/
/*                                                                   */
/*********************************************************************/



} /* class WatchDog */
